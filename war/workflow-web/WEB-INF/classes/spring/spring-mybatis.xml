<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">

	<!-- 基于Druid数据库链接池的数据源配置 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<!-- 基本属性driverClassName、 url、user、password -->
		<property name="driverClassName" value="${workflow.jdbc.driver}" />
		<property name="url" value="${workflow.jdbc.url}" />
		<property name="username" value="${workflow.jdbc.username}" />
		<property name="password" value="${workflow.jdbc.password}" />
		<!-- 配置初始化大小、最小、最大 -->
		<!-- 通常来说，只需要修改initialSize、minIdle、maxActive -->
		<property name="initialSize" value="2" />
		<property name="minIdle" value="2" />
		<property name="maxActive" value="30" />
		<property name="testWhileIdle" value="false" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="5000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="30000" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 解密密码必须要配置的项 -->
		<!-- <property name="filters" value="config" />
		<property name="connectionProperties" value="config.decrypt=true" /> -->
	</bean>
	<!-- 将数据源映射到sqlSessionFactory中 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations">
			<list>
                <value>classpath*:com/ztj/wood/workflow/mapper/mapping/*.xml</value>
            </list>
		</property>
		<property name="databaseIdProvider">
			<bean class="org.apache.ibatis.mapping.VendorDatabaseIdProvider">
				<property name="properties">
					<props>
						<prop key="MySQL">mysql</prop>
						<prop key="Oracle">oracle</prop>
					</props>
				</property>
			</bean>
		</property>
	</bean>
	
	<!-- DAO接口所在包名，Spring会自动查找其下的类 --> 
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.ztj.wood.workflow.mapper" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!-- SqlSession模板类实例 -->
	<bean id="sessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="close">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<!--======= 事务配置 Begin ================= -->
	<!-- 事务管理器（由Spring管理MyBatis的事务） -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 关联数据源 -->
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!--======= 事务配置 End =================== -->
	
	
	<bean id="taskEmail" class="com.ztj.wood.workflow.controller.TaskController" >
		<!-- 类型包括，类型分为  kendoui和easyui -->
		<property name="modularType" value="kendoui"></property>
		<!-- 处理类型包括，client和url   -->
	    <property name="dotaskStyle" value="url"></property>

		<!-- 是否启用 -->
	    <property name="isStart" value="false"></property>

	</bean>
	
	<bean id="taskEmailDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
	   	 <property name="targetObject" ref="taskEmail" />
   		 <property name="targetMethod" value="emailEachTask" />
	</bean>
	
	<!-- 增加调度触发器 -->
	<bean id="taskEmailTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
   		 <property name="jobDetail" ref="taskEmailDetail" />
    	 <property name="cronExpression" value="0 0/45 * * * ?" />
	</bean>
	
	<!-- 设置调度 -->
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
	    <property name="triggers">
	        <list>
	            <ref bean="taskEmailTrigger" />
	        </list>
	    </property>
	</bean>

</beans>